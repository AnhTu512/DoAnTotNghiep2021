@model DoAnTotNghiep2021.Models.RegisterModel
@using BotDetect.Web.Mvc;
<link href="@BotDetect.Web.CaptchaUrls.Absolute.LayoutStyleSheetUrl"
      rel="stylesheet" type="text/css" />
@{
    MvcCaptcha registerCaptcha = new MvcCaptcha("registerCaptcha");
    registerCaptcha.UserInputID = "CaptchaCode";
}
}
@{
    ViewBag.Title = "Đăng ký";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section container{
    <div class="products-breadcrumb">
        <div class="container">
            <ul>
                <li><i class="fa fa-home" aria-hidden="true"></i><a href="/">Home</a><span>|</span></li>
                <li>Đăng ký</li>
            </ul>
        </div>
    </div>
}

@section slide {
    <!-- banner -->
    <div class="banner">
        <div class="w3l_banner_nav_left">
            <nav class="navbar nav_bottom">
                <!-- Brand and toggle get grouped for better mobile display -->
                <div class="navbar-header nav_2">
                    <button type="button" class="navbar-toggle collapsed navbar-toggle1" data-toggle="collapse" data-target="#bs-megadropdown-tabs">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                </div>
                <!-- Collect the nav links, forms, and other content for toggling -->
                @{Html.RenderAction("MainMenu", "Home"); }
                <!-- /.navbar-collapse -->
            </nav>
        </div>
        <div class="w3l_banner_nav_right">
            <!-- login -->
            <div class="w3_login">
                <h3>Đăng ký tài khoản</h3>
                <div class="w3_login_module">
                    <div class="module form-module">
                        <div class="toggle">
                            <i class="fa fa-times fa-pencil"></i>
                        </div>
                        <div class="form">
                            @using (Html.BeginForm("Register", "User", FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()

                                <div class="form-horizontal">
                                    @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.TenTK, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(model => model.TenTK, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.TenTK, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Pass, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.PasswordFor(model => model.Pass, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Pass, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.TenNguoiDung, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(model => model.TenNguoiDung, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.TenNguoiDung, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(model => model.Address, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.SDT, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(model => model.SDT, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.SDT, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-md-offset-2 col-md-10">
                                            @Html.Captcha(registerCaptcha)
                                            @Html.TextBox("CaptchaCode")
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-md-offset-2 col-md-10">
                                            <input type="submit" value="Đăng ký" class="btn btn-default" />
                                        </div>
                                    </div>
                                </div>
                            }

                        </div>
                    </div>
                </div>
            </div>
            <!-- //login -->
        </div>
        <div class="clearfix"></div>
    </div>
    <!-- //banner -->
}

